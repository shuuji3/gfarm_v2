.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "GFARM" "3" "04 February 2011" "Gfarm" ""

.SH NAME
gfarm \- Gfarm file system API library
.SH SYNOPSIS

.nf
#include <gfarm/gfarm.h>
.fi
.SH "DESCRIPTION"
.PP
The Gfarm library provides an interface layer to
the Gfarm file system.  This manual gives an overview of the
library.  For details, refer to a manual page of each function.
.SS "INITIALIZE / FINALIZE"
.PP
\fBgfarm_initialize\fR(3) function is used for the initilization of the Gfarm
library, and
\fBgfarm_terminate\fR(3) function is used for the termination of the library.
.SS "FILE INPUT/OUTPUT OPERATIONS"
.PP
To open an existing file as a stream,
\fBgfs_pio_open\fR(3) function is used.
To create an file and open the file as a stream,
\fBgfs_pio_create\fR(3) function is used.
\fBgfs_pio_close\fR(3) function is used to close such streams.
.PP
\fBgfs_pio_error\fR(3) function is used to see whether an error happens or not
about a stream.
\fBgfs_pio_eof\fR(3) function is used to see whether a stream,
which is opened for read, already reaches end-of-file or not.
\fBgfs_pio_seek\fR(3) function changes the current position of the stream.
.PP
\fBgfs_pio_getc\fR(3) function reads a character from a stream, and
\fBgfs_pio_ungetc\fR(3) function puts back a character to a stream.
\fBgfs_pio_getline\fR(3) function,
\fBgfs_pio_gets\fR(3) function, and
\fBgfs_pio_readline\fR(3) function read one line from a stream, and
\fBgfs_pio_readdelim\fR(3) function reads from stream until delimiter character,
specified by the function argument, appears.
\fBgfs_pio_read\fR(3) function reads specified bytes from a stream.
.PP
\fBgfs_pio_putc\fR(3) function writes one character to a stream, and
\fBgfs_pio_putline\fR(3) function and
\fBgfs_pio_puts\fR(3) function write one line to a stream.
\fBgfs_pio_write\fR(3) function writes specified bytes to a stream.
\fBgfs_pio_flush\fR(3) function,
\fBgfs_pio_sync\fR(3) function and
\fBgfs_pio_datasync\fR(3) function moves buffered data to a storage device.
\fBgfs_pio_truncate\fR(3) function truncates a file.
.SS "DIRECTORY ACCESS"
.PP
\fBgfs_opendir\fR(3) function opens a directory, and
\fBgfs_readdir\fR(3) function retrieves entries of the directory.
\fBgfs_closedir\fR(3) function closes the directory.
.PP
A gfs_glob_t data, which is initialized by
\fBgfs_glob_init\fR(3) function,
can be passed to
\fBgfs_glob\fR(3) function, and the gfs_glob function returns
list of matched file/directory names in the gfs_glob_t.
The gfs_glob_t must be released by 
\fBgfs_glob_free\fR(3) function.
\fBgfs_glob_add\fR(3) function is used add an entry to gfs_glob_t.
.SS "FILE / DIRECTORY MANIPULATION"
.PP
\fBgfs_chmod\fR(3) function changes the mode of a file, and
\fBgfs_chown\fR(3) function changes the owner of a file, and
\fBgfs_utimes\fR(3) function changes file's modification time and access time.
.PP
\fBgfs_mkdir\fR(3) function creates a directory, and
\fBgfs_rmdir\fR(3) function removes a directory.
\fBgfs_unlink\fR(3) function removes a file, and
\fBgfs_rename\fR(3) function renames a file or a directory.
.PP
\fBgfs_stat\fR(3) function returns information like size, modified/access
time, etc.
The struct gfs_stat returned by gfs_stat function must be released by
\fBgfs_stat_free\fR(3) function.
.SS "ACL (ACCESS CONTROL LIST) OPERATIONS"
.PP
\fBgfs_acl_init\fR(3) function is used for the initilization of an ACL
structure (gfarm_acl_t), and
\fBgfs_acl_free\fR(3) function is used to release the ACL structure.
\fBgfs_acl_dup\fR(3) function duplicates an ACL structure.
.PP
\fBgfs_acl_create_entry\fR(3) function creates an ACL entry (gfarm_acl_entry_t) in
an ACL structure, and
\fBgfs_acl_get_entry\fR(3) function gets an ACL entry from the ACL structure, and
\fBgfs_acl_delete_entry\fR(3) function removes an ACL entry from the ACL structure.
.PP
\fBgfs_acl_valid\fR(3) function checks an ACL structure for validity.
gfs_acl_check(3) function can check more for
validity.
.PP
\fBgfs_acl_calc_mask\fR(3) function calculates and sets an ACL permissions of
a GFARM_ACL_MASK type entry in an ACL structure.
.PP
\fBgfs_acl_get_tag_type\fR(3) function gets an ACL tag (gfarm_acl_tag_t) (type of
ACL entry) from an ACL entry.
\fBgfs_acl_set_tag_type\fR(3) function sets an ACL tag of an ACL entry.
.PP
\fBgfs_acl_get_permset\fR(3) function gets an ACL permission-set
(gfarm_acl_permset_t) from an ACL entry.
\fBgfs_acl_set_permset\fR(3) function an ACL permission-set of an ACL entry.
.PP
\fBgfs_acl_add_perm\fR(3) function adds an ACL permission (gfarm_acl_perm_t) to
an ACL permission-set.
\fBgfs_acl_clear_perms\fR(3) clears all ACL permissions from an ACL permission-set.
\fBgfs_acl_delete_perm\fR(3) function deletes a permission from an ACL permission-set.
.PP
\fBgfs_acl_get_qualifier\fR(3) function gets a username/groupname from an ACL entry.
GFARM_ACL_USER/GFARM_ACL_GROUP tag entries have a username/groupname.
\fBgfs_acl_set_qualifier\fR(3) function sets a username/groupname of an ACL entry.
.PP
\fBgfs_acl_delete_def_file\fR(3) function deletes a Default ACL from a file or directory.
\fBgfs_acl_get_file\fR(3) function gets an ACL structure of a file or directory.
\fBgfs_acl_set_file\fR(3) function replaces an ACL structure of a file or directory.
Before using this function, the ACL structure must be sorted by
gfs_acl_sort(3) function.
.PP
\fBgfs_acl_to_text\fR(3) function converts an ACL structure to an ACL text.
gfs_acl_to_any_text(3) function is more
functional than this function.
\fBgfs_acl_from_text\fR(3) function creates an ACL structure from an ACL text.
.PP
\fBgfs_acl_get_perm\fR(3) function tests for an ACL permission in an ACL
permission set.
.PP
\fBgfs_acl_check\fR(3) function checks an ACL structure for validity.
And, this function can get the place of the error and the ACL error code.
This function is more functional than
gfs_acl_valid(3) function.
\fBgfs_acl_error\fR(3) function converts an ACL error code of
gfs_acl_check(3) function to a text message.
.PP
\fBgfs_acl_entries\fR(3) function returns the number of entries in an ACL structure.
.PP
\fBgfs_acl_equiv_mode\fR(3) checks for an equivalent ACL structure.  An equivalent
ACL structure has only base ACL entries of tag types
(GFARM_ACL_USER_OBJ, GFARM_ACL_GROUP_OBJ, GFARM_ACL_OTHER).  And, this
function can create a file permission bits (gfarm_mode_t) from base
ACL entries.
.PP
\fBgfs_acl_cmp\fR(3) function compares two ACL structures.
.PP
\fBgfs_acl_from_mode\fR(3) function creates an ACL structure from file permission
bits (gfarm_mode_t).
.PP
\fBgfs_acl_to_any_text\fR(3) function converts an ACL structure to an ACL text.  This
function has some options for output format.  This function is more
functional than gfs_acl_to_text(3) function.
.PP
\fBgfs_acl_to_xattr_value\fR(3) converts an ACL structure to ACL binary data for
Extended Attribute value.  Before using this function, the ACL
structure must be sorted by gfs_acl_sort(3)
function.
\fBgfs_acl_from_xattr_value\fR(3) converts ACL binary data for Extended Attribute value
to an ACL structure.
.PP
\fBgfs_acl_sort\fR(3) function sorts ACL entries of an ACL structure in ACL
validity order.
.PP
\fBgfs_acl_from_text_with_default\fR(3) function creates two ACL structures (Access ACL and
Default ACL) from an ACL text which includes "default:" prefix.
.SS "ERROR HANDLING"
.PP
Most Gfarm API returns the Gfarm error code in gfarm_error_t.
\fBgfarm_error_string\fR(3) function returns a string describing the Gfarm error code.
\fBgfarm_errno_to_error\fR(3) function translates the error number (errno) to the Gfarm
error code.
\fBgfarm_error_to_errno\fR(3) function translates the Gfarm error code to the error number.
.SS "STRING ARRAY MANIPULATION UTILITIES"
.PP
A gfarm_stringlist type variable represents an array of strings,
and this type is initialized by
\fBgfarm_stringlist_init\fR(3) function.
\fBgfarm_stringlist_add\fR(3) function is used to add a string to a gfarm_stringlist.
\fBgfarm_stringlist_cat\fR(3) function is used to add strings to a gfarm_stringlist.
\fBgfarm_stringlist_free\fR(3) function releases gfarm_stringlist.
\fBgfarm_stringlist_elem\fR(3) function or
GFARM_STRINGLIST_ELEM() macro
can be used to access each string of an array.
\fBgfarm_stringlist_length\fR(3) function can be used to see number of strings in an array.
.PP
\fBgfarm_strings_free_deeply\fR(3) function releases a string array and each element of the
array by calling standard library function free().
.SS "STRING ARRAY MANIPULATION MACROS"
.TP
\fBGFARM_STRINGLIST_ELEM(list, i)\fR
represents \fIi\fR-th element of
the \fIlist\fR argument which type is gfarm_stringlist.
This macro can be used as a L-value.
If this macro is used as a value, it returns same result with
\fBgfarm_stringlist_elem\fR(3) function.
.TP
\fBGFARM_STRINGLIST_STRARRAY(list)\fR
returns pointer to first element of the \fIlist\fR argument
which type is gfarm_stringlist.
The type of the return value is a pointer to pointer to a character.
