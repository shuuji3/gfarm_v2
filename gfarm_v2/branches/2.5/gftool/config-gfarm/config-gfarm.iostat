iostat_gfmd_dir="iostat-gfmd"
iostat_gfsd_dir="iostat-gfsd"
iostat_counterdir_old=""
ganglia_sysconfdirs="/etc/ganglia /usr/local/etc/ganglia"
for d in /etc/ganglia /usr/local/etc/ganglia; do
	if [ -z $GANGLIA_CONF_DIR ] && [ -d $d ]; then
		GANGLIA_CONF_DIR=$d
	fi
done
: ${IOSTAT_MAX_CLIENT:=1024}
IOSTAT_LABEL=""

yn2tf()
{
    case $1 in
    yes) echo true;;
    *)   echo false;;
    esac
}
getvalue_gfarm()
{
	: ${awk:=awk}
	$awk '$1 == "'"$1"'" { print $2 }' $GFARM_CONF_DIR/gfarm2.conf
}

iostat_init()
{
	: ${IOSTAT_ENABLE:=true}
	: ${CONFIG_PREFIX:=}
	: ${iostat_counterdir:="$CONFIG_PREFIX/var/gfarm-stat"}
	: ${ganglia_dir:="${datadir}/gfarm/ganglia"}
}
iostat_fail()
{
	ABORT $1
	echo $1 "disabled iostat."
	IOSTAT_ENABLE=false
}

iostat_get_module()
{
	if [ -z $IOSTAT_LABEL ]; then
		module=gfarm_"$1"
	else
		module=gfarm_"$1"_$IOSTAT_LABEL
	fi
	echo $module
}
iostat_get_pyconf()
{
	module=`iostat_get_module $1`
	echo "${module}.pyconf"
}
iostat_check_pyconf()
{
	pyconf=`iostat_get_pyconf $1`
	if [ -e $GANGLIA_CONF_DIR/conf.d/"$pyconf" ] && ! $FORCE; then
		iostat_fail "$GANGLIA_CONF_DIR/conf.d/$pyconf already exist."
	fi
}
iostat_check_ganglia()
{
	tgt=$1
	if $IOSTAT_ENABLE; then
		if [ -z $GANGLIA_CONF_DIR ]; then
			iostat_fail "not specified ganglia_sysconfdir."
		elif [ ! -d $GANGLIA_CONF_DIR/conf.d ]; then
			iostat_fail "not found $GANGLIA_CONF_DIR/conf.d."
		else
			python_modules=`egrep -r \
			"^[[:space:]]*params[[:space:]]*=.*python_modules"\
			$GANGLIA_CONF_DIR/conf.d | awk -F= '{print $2}' | \
			sed 's/"//g' `
			if [ -z $python_modules ]; then
				iostat_fail "not found python_modules path in "\
					"ganglia_sysconfdir  $GANGLIA_CONF_DIR"
				echo "       If you want to enable iostat, "\
					"please install python enabled ganglia."
			else
				iostat_check_pyconf $tgt
			fi
		fi
	fi
}
copy_ganglia_plugin()
{
	name=gfarm_"$1"
	module=`iostat_get_module $1`
	pyconf=`iostat_get_pyconf $1`

	if $IOSTAT_ENABLE; then
	temp=`mktemp`
	cat << _EOF_ >$temp
	(cat $ganglia_dir/${name}.pyconf | \
		sed -e "s#@iostat_counterdir@#$iostat_counterdir#" \
		    -e "s#@iostat_module@#$module#" \
		    -e "s#@iostat_label@#$IOSTAT_LABEL#" \
		> $GANGLIA_CONF_DIR/conf.d/$pyconf) \
		&& \
	cp -f $ganglia_dir/gfarm_iostat.py $python_modules/${module}.py \
	&& rm $temp
_EOF_
	sh $temp || echo "!!!! Ask admin_user to run $temp !!!"
	fi
}
##############################################################################
# gfmd
#
usage_iostat()
{
	iostat_init

	IOSTAT_ENABLE_YN=`tf2yn $IOSTAT_ENABLE`
	echo >&2 "      [--iostat-enable {no|yes} (default $IOSTAT_ENABLE_YN)]"
	echo >&2 "      [--iostat-label cluster_label]"
	echo >&2 "      [--iostat-counter-dir iostat_counter_directory"\
			"(default is $iostat_counterdir)]"
	echo >&2 "      [--iostat-ganglia-confdir ganglia_sysconf_directory"\
			"(default is $GANGLIA_CONF_DIR)]"
}

display_iostat_params()
{

    IOSTAT_ENABLE_YN=`tf2yn $IOSTAT_ENABLE`
    echo "iostat enable   [--iostat-enable]: $IOSTAT_ENABLE_YN"
    if $IOSTAT_ENABLE; then
	echo "cluster label                       [--iostat-label]:"\
			"$IOSTAT_LABEL"
	echo "iostat counter directory      [--iostat-counter-dir]:"\
			"$iostat_counterdir"
	echo "ganglia sysconf directory [--iostat-ganglia-confdir]:"\
			"$GANGLIA_CONF_DIR"
    fi
}
display_iostat_script_params()
{

    echo     "IOSTAT_ENABLE=$IOSTAT_ENABLE"
    if $IOSTAT_ENABLE; then
	echo     "IOSTAT_DIR=$iostat_counterdir"
	echo     "IOSTAT_LABEL=$IOSTAT_LABEL"
	echo     "GANGLIA_CONF_DIR=$GANGLIA_CONF_DIR"
    fi
}
iostat_args()
{
	key=$1
	val=$2

	case $key in
	  --iostat-enable)
		IOSTAT_ENABLE=`yn2tf $val`
		;;
	  --iostat-ganglia-confdir)
		GANGLIA_CONF_DIR=$val
		;;
	  --iostat-counter-dir)
		iostat_counterdir=$val
		;;
	  --iostat-label)
		IOSTAT_LABEL=$val
		;;
	*)
		usage
		;;
	esac
}
gfmd_mkiostat()
{
	if $IOSTAT_ENABLE; then
		dirpath="$iostat_counterdir/$iostat_gfmd_dir"
		create_directory $dirpath
		chmod 0775 $dirpath || iostat_fail ""
		copy_ganglia_plugin gfmd
	fi
}
gfmd_mkconf()
{
	if $IOSTAT_ENABLE; then
		echo "iostat_gfmd_path " \
			"$iostat_counterdir/$iostat_gfmd_dir/gfmd" >> $GFMD_CONF
	fi
}
iostat_set_default()
{
	iostat_init
}
create_iostat()
{
	iostat_check_ganglia "gfmd"

	iostat_gfmd_dir="${iostat_gfmd_dir}-$GFMD_PORT"

	gfmd_mkiostat
	gfmd_mkconf
}
update_iostat()
{
	temp=`mktemp`
	rm -rf "$iostat_counterdir/$iostat_gfmd_dir*"
	pyconf=`iostat_get_pyconf gfmd`
	rm -f $GANGLIA_CONF_DIR/conf.d/$pyconf
	egrep -v '^iostat_' $GFMD_CONF > $temp && mv $temp $GFMD_CONF
	create_iostat
}
##############################################################################
# gfsd
#
usage_iostat_gfsd()
{
	iostat_init
	echo >&2 "      [--iostat-enable {no|yes} (default $IOSTAT_ENABLE_YN)]"
	echo >&2 "      [--iostat-label cluster_label]"
	echo >&2 "      [--iostat-counter-dir iostat_counter_directory"\
			"(default is $iostat_counterdir)]"
	echo >&2 "      [--iostat-ganglia-confdir ganglia_sysconf_directory"\
			"(default is $GANGLIA_CONF_DIR)]"
	echo >&2 "      [--iostat-max-client iostat_max_client"\
			"(default is $IOSTAT_MAX_CLIENT)]"
}

display_iostat_gfsd_params()
{

    if $IOSTAT_ENABLE; then
	echo "cluster label                       [--iostat-label]:"\
			"$IOSTAT_LABEL"
	echo "iostat counter directory      [--iostat-counter-dir]:"\
			"$iostat_counterdir"
	echo "ganglia sysconf directory [--iostat-ganglia-confdir]:"\
			"$GANGLIA_CONF_DIR"
	echo "iostat max client              [--iostat-max-client]:"\
			"$IOSTAT_MAX_CLIENT"
    fi
}
display_iostat_gfsd_script_params()
{
    echo     "IOSTAT_ENABLE=$IOSTAT_ENABLE"
    if $IOSTAT_ENABLE; then
	echo     "IOSTAT_DIR=$iostat_counterdir"
	echo     "IOSTAT_LABEL=$IOSTAT_LABEL"
	echo     "GANGLIA_CONF_DIR=$GANGLIA_CONF_DIR"
	echo     "IOSTAT_MAX_CLIENT=$IOSTAT_MAX_CLIENT"
    fi
}
iostat_gfsd_args()
{
	key=$1
	val=$2

	case $key in
	  --iostat-enable)
		IOSTAT_ENABLE=`yn2tf $val`
		;;
	  --iostat-ganglia-confdir)
		GANGLIA_CONF_DIR=$val
		;;
	  --iostat-counter-dir)
		iostat_counterdir=$val
		;;
	  --iostat-max-client)
		IOSTAT_MAX_CLIENT=$val
		;;
	  --iostat-label)
		IOSTAT_LABEL=$val
		;;
	*)
		usage
		;;
	esac
}
gfsd_mkconf()
{
	if $IOSTAT_ENABLE; then
		echo "iostat_gfsd_path $iostat_counterdir/$iostat_gfsd_dir"\
			>> $GFARM_CONF
		echo "iostat_max_client $IOSTAT_MAX_CLIENT" >> $GFARM_CONF
	fi
}
gfsd_mkiostat()
{
	if $IOSTAT_ENABLE; then
		create_directory $iostat_counterdir
		chmod 0775 $iostat_counterdir
		copy_ganglia_plugin gfsd
	fi
}
create_iostat_gfsd()
{
	iostat_check_ganglia "gfsd"
	gfsd_mkiostat
	gfsd_mkconf
}
update_iostat_gfsd()
{
	temp=`mktemp`
	chmod a+r $temp
	rm -rf "$iostat_counterdir/$iostat_gfsd_dir*"
	pyconf=`iostat_get_pyconf gfsd`
	rm -f $GANGLIA_CONF_DIR/conf.d/$pyconf
	egrep -v '^iostat_' $GFARM_CONF > $temp && mv $temp $GFARM_CONF
	create_iostat_gfsd
}
