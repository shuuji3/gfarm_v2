digraph threads {
  graph [label = "Inter-Thread dependency of gfmd",
	labelloc = t, labeljust = l, fontsize = 18];

  accepting_loop;
  sigs_handler;
  callout_main;
  db_thread;
  peer_watcher;


  subgraph cluster0 {
    label = "authentication_thread_pool";

    try_auth;
  }


  subgraph cluster1 {
    label = "sync_protocol_thread_pool";

    protocol_main;
  }

  accepting_loop -> try_auth
	[label = "thrpool_add_job", fontcolor = blue, color = blue];
  try_auth -> protocol_main
	[label = "thrpool_add_job", fontcolor = blue, color = blue];
  peer_watcher -> protocol_main
	[label = "thrpool_add_job", fontcolor = blue, color = blue];


  subgraph cluster2 {
    label = "back_channel_send_thread_pool";

    gfs_async_client_status_request;
    gfs_async_client_replication_request_requestt;
  }

  protocol_main -> gfs_async_client_replication_request_requestt
	[label = "thrpool_add_job", fontcolor = blue, color = blue];
  protocol_main -> gfs_async_client_status_request
	[label = "thrpool_add_job", fontcolor = blue, color = blue];
  callout_main -> gfs_async_client_status_request
	[label = "thrpool_add_job", fontcolor = blue, color = blue];


  subgraph cluster3 {
    label = "back_channel_recv_thread_pool";

    async_back_channel_main;
  }

  protocol_main -> async_back_channel_main
	[label = "thrpool_add_job", fontcolor = blue, color = blue];
  peer_watcher -> async_back_channel_main
	[label = "thrpool_add_job", fontcolor = blue, color = blue];
  gfs_async_client_status_request -> async_back_channel_main
	[label = "RPC request & reply", fontcolor = green, color = green];
  gfs_async_client_replication_request_requestt -> async_back_channel_main
	[label = "RPC request & reply", fontcolor = green, color = green];
}
