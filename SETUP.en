		Gfarm Filesystem Setup Manual

About this document
===================

This document describes how to configure the Gfarm filesystem.

For users who would like to configure a private Gfarm filesystem by a
non privileged user, refer to SETUP.private.en.

Please install the Gfarm software before using this manual,
By using either INSTALL.en, for installation from the source code,
or INSTALL.RPM.en, for installation from the RPM binary packages.

If problems occur, please refer to the Trouble Shooting section
in Gfarm-FAQ.en.

Overview
========

To introduce the Gfarm filesystem, a metadata server, and filesystem
nodes have to be configured.

Configuration of a Gfarm metadata server
========================================

o Configuration of the Gfarm filesystem

Log on as a normal user, and change to the root privilege by 'su'.

  This normal user would be a privileged user in Gfarm file system.

Run 'config-gfarm' to configure a Gfarm filesystem.  First, make
sure of the default setting with the -t option.  With the -t option,
nothing is really executed except for the display of the settings for
configuration.

	# config-gfarm -t

You can modify any default parameter with the option shown in [ ].

When you have confirmed the parameter, run 'config-gfarm' without the
-t option.

config-gfarm creates a Gfarm configuration file, /etc/gfarm2.conf and
/etc/gfmd.conf.

  'prefix' is used to configure several Gfarm filesystems. It
  generates all configuration files under the specified directory.

Create a '_gfarmfs' user.  This user is used to authenticate between
gfsd and gfmd.

	# useradd -c "Gfarm gfsd" _gfarmfs

  We recommend to create a home directory in NFS if available.

Create a shared secret key in the home directory.

	# su _gfarmfs
	$ gfkey -c -p 31536000
	$ ls -l ~/.gfarm_shared_key 

  This example sets up an expiration date of about one year (31536000
  seconds).

o Firewall configuration

The Gfarm metadata server should be able to accept TCP connections at
a port that are specified by the -m option of the config-gfarm
command.

Configuration of a Gfarm filesystem node
========================================

o Configuration of a filesystem node

Create a '_gfarmfs' user if not exist.  This user is used to
authenticate between gfsd and gfmd.

	# useradd -c "Gfarm gfsd" _gfarmfs

Copy the shared secret key .gfarm_shared_key in the _gfarmfs's
directory from the metadata server if the home directory is not
shared.

  Note that the permission of .gfarm_shared_key should be '0600'
  and the owner should be '_gfarmfs'.

Copy /etc/gfarm2.conf from the metadata server that is created by
'config-gfarm'.

Run 'config-gfsd' to set up a spool directory in a local filesystem
on the filesystem node, and register it in the metadata server.
First, make sure of the default setting with the -t option.  With the -t
option, nothing is really executed except for display of the settings for
configuration.

	# config-gfsd -t /var/gfarm

  You can modify any default parameter by using the option shown in [ ].

  The last argument of config-gfsd is a spool directory, which stores
  physical files in Gfarm file system.  Note that the spool directory
  should be a non-shared area among filesystem nodes.

When you have confirmed the parameter, run 'config-gfsd' without the -t
option.

	# config-gfsd /var/gfarm

config-gfsd displays a command line of 'gfhost' that would be executed
by an admin user in Gfarm file system.  Switch to the admin user, and
execute the command line.

	$ /usr/bin/gfhost -c -a i386-fedora5-linux -p 600 -n 2 node1.example.org

Switch back to the root user, and execute gfsd.

	# /etc/init.d/gfsd start

o Firewall configuration

Filesystem nodes should be able to accept TCP connections and
UDP packet reception and transmission at the port that is
specified by the -p option of the config-gfsd command.

Also, it requires the same settings as those of the client nodes.

Configuration of a Gfarm client node
====================================

This chapter describes configuration only for a client node.

o Configuration of a client node

Copy /etc/gfarm2.conf from the metadata server to the client node.

Note: This setting can be substituted for copying to ~/.gfarm2rc.

If user's home directory is shared among metadata server and file
system nodes, there is nothing to do.  If not, .gfarm_shared_key
needs to be create and copied among every nodes.

o Firewall configuration

Client nodes should be able to initiate TCP connections to the metadata
server, at the port specified by the -m option of the config-gfarm command.
Furthermore, they should be able to initiate TCP connections and
should be able to send/receive UDP packets to filesystem nodes, from the
port specified by the -p option of the config-gfsd command.

Testing of the Gfarm filesystem
===============================

You can check whether the Gfarm filesystem works or not using any client,
since it can be accessed (or shared) by every client node.

o gfls - Directory listing

'gfls' lists the contents of a directory.

	% gfls -la
	drwxrwxr-x gfarmadm gfarmadm          4 Aug 23 06:33 .
	drwxrwxr-x gfarmadm gfarmadm          4 Aug 23 06:33 ..
	drwxr-xr-x tatebe   gfarmadm          0 Aug 22 16:08 tmp

o gfhost - Filesystem node information

'gfhost -M' displays the information for filesystem nodes registered
with the metadata server.

	% gfhost -M
	i386-fedora3-linux 2 linux-1.example.com 600 0
	i386-fedora3-linux 2 linux-2.example.com 600 0
	i386-fedora3-linux 2 linux-3.example.com 600 0
	i386-redhat8.0-linux 1 linux-4.example.com 600 0
	sparc-sun-solaris8 1 solaris-1.example.com 600 0
	sparc-sun-solaris8 1 solaris-2.example.com 600 0
	...

'gfhost -l' displays the status of the filesystem nodes.

	% gfhost -l
	0.01/0.03/0.03 s i386-fedora3-linux 2 linux-1.example.com 600 0(10.0.0.1)
	0.00/0.00/0.00 s i386-fedora3-linux 2 linux-2.example.com 600 0(10.0.0.2)
	-.--/-.--/-.-- - i386-fedora3-linux 2 linux-3.example.com 600 0(10.0.0.3)
	0.00/0.02/0.00 x i386-redhat8.0-linux 1 linux-4.example.com 600 0(10.0.0.4)
	0.10/0.00/0.00 G sparc-sun-solaris8 1 solaris-1.example.com 600 0(10.0.1.1)
	x.xx/x.xx/x.xx - sparc-sun-solaris8 1 solaris-2.example.com 600 0(10.0.1.2)
	...

The second field shows the status of authentication with the filesystem
node.  's', 'g', and 'G' show successful authentication, while 'x'
shows an authentication failure.

'-.--/-.--/-.--' in the first field shows that gfsd has not executed
correctly, and 'x.xx/x.xx/x.xx' shows the filesystem node is probably
down.

For details of the above Gfarm commands, refer to the respective man page.

User registration
=================

Every user needs to be registered to access Gfarm file system by a
Gfarm administrator.

  A Gfarm administrator that executes config-gfarm is automatically
  registered during config-gfarm.

For user registration, execute gfuser command;

	% gfuser -c global_username realname homedir gsi_dn

'global_username' is a global user name in Gfarm file system.
'realname' is a name to identify the user.  'homedir' is a home
directory in Gfarm.  'gsi_dn' is a subject DN of a user certificate
used in GSI authentication.

  'homedir' and 'gsi_dn' are not used for now.

When 'realname' includes a space, it is necessary to quote.  The
following example registers a global user 'foo';

	% gfuser -c foo "foo bar" /home/foo ""

Next, it is necessary to create a home directory for the user.  In the
case of the above example, 

	% gfmkdir /home
	% gfmkdir /home/foo
	% gfchown foo /home/foo

Further examples of advanced functionality
==========================================

o File replica creation

Each file in the Gfarm filesystem can have several file copies that
can be stored on two and more filesystem nodes.

Multiple file copies of the same file enables access to the file even
when one of the filesystem nodes is down.  Moreover, it enables
prevention of access performance deterioration by allowing access to
different file copies.

The 'gfwhere' command displays the location of file copies, or a replica
catalog, of the specified files.

	% gfwhere .bashrc
	linux-1.example.com

The 'gfrep' command creates file copies.

	% gfrep -s linux-1.example.com -d linux-2.example.com .bashrc
	% gfwhere .bashrc
	linux-1.example.com linux-2.example.com

In this case, '.bashrc' has two copies; one is stored on
linux-1.example.com and the other is stored on linux-2.example.com.
