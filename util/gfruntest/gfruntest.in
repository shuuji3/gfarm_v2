#!/bin/sh
PROGRAM=gfruntest
GFSERVICE="@bindir@/gfservice"
TEST_PREFIX="@datadir@/gfarm/systest"
TESTCASES_DIR="$TEST_PREFIX/testcases"
PARAMETERS_DIR="$TEST_PREFIX/parameters"
COMMON_SCRIPTS_DIR="$TEST_PREFIX/common_scripts"

DEBUG=""

#
# Result codes
#
RESULT_PASS=0
RESULT_FAIL=1
RESULT_XPASS=2			# passed, but it's unexpected. fixed recently?
RESULT_XFAIL=3			# failed, but it's expected. i.e. known bug.
RESULT_UNRESOLVED=4		# cannot determine whether (X)?PASS or (X)?FAIL
RESULT_FATAL=5			# something fatal happend and cannot continue
RESULT_UNTESTED=6		# not tested, this test haven't written yet.
RESULT_UNSUPPORTED=7		# not tested, this environment can't test this.

#
# Output a warning message.
#
log_warn()
{
	echo "$PROGRAM: warning: $@" 1>&2
	return 0
}

#
# Output an error message.
#
log_error()
{
	echo "$PROGRAM: error: $@" 1>&2
	exit 1
}

#
# Load script files from common_scripts directory.
#
load()
{
	if [ $# -lt 1 ]; then
		return 1;
	fi

	for FILE in $@; do
		if [ -f $COMMON_SCRIPTS_DIR/$FILE ]; then
			. $COMMON_SCRIPTS_DIR/$FILE
		else
			log_warn "failed to open script file \"$FILE\""
		fi
	done
}

#
# Output an usage.
#
print_usage()
{
	echo "Usage: $PROGRAM [option...] testcase [<argument>...]"	1>&2
	echo "Option:"							1>&2
	echo "  -d                  debug mode"				1>&2
	echo "  -f <config_file>    specify the gfservice configuration file" \
		1>&2
	echo "  -p <parameter_file> specify the test parameter file"	1>&2
}

#
# Parse command line options.
#
while [ $# -ge 1 ]; do
	case "$1" in
	--)	shift
		break
		;;
	-)	break
		;;
	-d)	DEBUG="-d"
		shift
		;;
	-f)	shift
		if [ $# -eq 0 ]; then
			echo "option requires an argument -- 'f'" 1>&2
			print_usage
			exit 1
		fi
		if [ -f $1 ]; then
			GFSERVICE="$GFSERVICE -f $1"
		else
			echo "failed to open configuration file \"$1\"" 1>&2
			exit 1
		fi
		shift
		;;
	-p)	shift
		if [ $# -eq 0 ]; then
			echo "option requires an argument -- 'p'" 1>&2
			print_usage
			exit 1
		fi
		if [ -f $PARAMETERS_DIR/$1 ]; then
			. $PARAMETERS_DIR/$1
		else
			echo "failed to open parameter file \"$1\"" 1>&2
			exit 1
		fi
		shift
		;;
	-*)	echo "$0: invalid option -- '$1'" 1>&2
		print_usage
		exit 1;
		;;
	*)	break
		;;
	esac
done

if [ $# -lt 1 ]; then
	echo "test case is not specified" 1>&2
	print_usage
	exit 1
fi

TESTNAME=$1
shift 1
TEST_EXEC_ID="test_`hostname`_$$"

if [ -f "$TESTCASES_DIR/$TESTNAME" ]; then
	. "$TESTCASES_DIR/$TESTNAME"
else
	log_error "invalid test case: $TESTNAME"
fi

echo -n "start: $TESTNAME "
date

test_${TESTNAME} "$@"
RESULT=$?
case $RESULT in
$RESULT_PASS)	RESULT_MESSAGE="PASS"
		;;
$RESULT_FAIL)	RESULT_MESSAGE="FAIL"
		;;
$RESULT_XPASS)	RESULT_MESSAGE="XPASS"
		;;
$RESULT_XFAIL)	RESULT_MESSAGE="XFAIL"
		;;
$RESULT_UNRESOLVED)	RESULT_MESSAGE="UNRESOLVED"
		;;
$RESULT_FATAL)	RESULT_MESSAGE="FATAL"
		;;
$RESULT_UNTESTED)	RESULT_MESSAGE="UNTESTED"
		;;
$RESULT_UNSUPPORTED)	RESULT_MESSAGE="UNSUPPORTED"
		;;
*)	RESULT_MESSAGE="UNKNOWN RESULT CODE"
	;;
esac

echo -n "end: $TESTNAME $RESULT_MESSAGE "
date
exit $RESULT
